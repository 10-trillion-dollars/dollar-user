name: Java CI with Gradle
on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    #CI
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set yml files
        uses: microsoft/variable-substitution@v1

        # 아래 파일에서 변수 치환 수행
        with:
          files: ./src/main/resources/application.yml
        # 치환될 변수 정의 (변수는 GitHub Secrets에 저장)
        env:
          spring.datasource.url: ${{ secrets.RDS_HOST }}
          spring.datasource.username: ${{ secrets.RDS_USERNAME }}
          spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
          jwt.key: ${{ secrets.JWT_KEY }}
#          destination:

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # Docker 이미지 빌드
      - name: docker image build
        run: docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/user .

      # DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/user

      #CD
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            sudo docker stop $(sudo docker ps -q --filter ancestor=jw059/user)
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/user
            sudo docker run --platform linux/amd64 -d -e destination=${{ secrets.DESTINATION }} -p 8082:8082 ${{ secrets.DOCKERHUB_USERNAME }}/user
            sudo docker image prune -f
